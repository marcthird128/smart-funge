(()=>{var e={393:e=>{e.exports={loaded:!1,debug:!1,assets:{},config:{object:{}}}},463:(e,o,t)=>{const n=t(723),s=t(393),a=[{name:"style",type:"text",path:"assets/style.css"},{name:"icon",type:"image",path:"assets/icon.png"},{name:"circle-arrow-right",type:"image",path:"assets/circle-arrow-right.svg"},{name:"circle-play",type:"image",path:"assets/circle-play.svg"},{name:"circle-pause",type:"image",path:"assets/circle-pause.svg"},{name:"circle-stop",type:"image",path:"assets/circle-stop.svg"}],r={progress:0,total:a.length,complete:!1};let l;function c(){return r.progress==r.total&&(r.complete=!0,l(),!0)}r.promise=new Promise((e=>{l=e})),r.load=function(){a.forEach((e=>{!function(e){const{name:o,type:t,path:a}=e;if("text"==t)fetch(a).then((e=>(e.ok||n.severe(`Could not load text asset ${o} from ${a}: ${e.status} ${e.statusText}`),e.text()))).then((e=>{n.log(`Loaded text asset ${o} from ${a}`),s.assets[o]=e,r.progress++,c()})).catch((e=>{n.error(`Could not load text asset ${o} from ${a}: ${e.message}`)}));else if("image"==t){const e=new Image;e.src=a,e.onload=()=>{n.log(`Loaded image asset ${o} from ${a}`),s.assets[o]=e,r.progress++,c()},e.onerror=()=>{n.error(`Could not load image asset ${o} from ${a}`)}}}(e)}))},e.exports=r},723:(e,o,t)=>{const n=t(393);function s(){const e=new Date;return`${e.getHours().toString().padStart(2,"0")}:${e.getMinutes().toString().padStart(2,"0")}:${e.getSeconds().toString().padStart(2,"0")}`}e.exports={formatTime:s,debug:function(e=""){n.config.object.debugMode&&console.log(`[${s()} DEBUG] %c${e}`,"color: purple;")},log:function(e=""){console.log(`[${s()} LOG] %c${e}`,"color: blue;")},warn:function(e=""){console.log(`[${s()} WARN] %c${e}`,"color: orange;")},error:function(e=""){console.log(`[${s()} ERROR] %c${e}`,"color: red;")},severe:function(e=""){throw console.log(`[${s()} SEVERE] %c${e}`,"color: darkred;"),new Error("A severe error occurred: "+e)}}},945:(e,o,t)=>{const n=t(723),s=t(393),a={init:function(){if(s.loaded)return void n.warn("gui.init called twice!");document.body.innerHTML="",document.title="Smart Funge";let e=document.createElement("link");e.rel="icon",e.href=s.assets.icon.src,document.head.appendChild(e)}};s.gui=a,e.exports=a},962:(e,o,t)=>{const n=t(723),s={object:{},default:function(){s.object={debugMode:!1,saveLocally:!0,stylesheet:"assets/style.css"}},override:function(){if(window.smartFungeConfig)for(let e in window.smartFungeConfig)s.object[e]=window.smartFungeConfig[e]},save:function(){if(!s.object.saveLocally)return;if(!window.localStorage)return void n.warn("No local storage but config.saveLocally enabled");let e;try{e=JSON.stringify(s.object)}catch(e){n.severe("Could not convert config to JSON: "+e.message)}window.localStorage.setItem("smartFungeConfig",e)},load:function(){if(!window.localStorage)return void n.warn("No local storage but config.saveLocally enabled");let e;try{e=JSON.parse(window.localStorage.getItem("smartFungeConfig"))}catch(e){n.severe("Could not load config from local storage: "+e.message)}Object.assign(s.object,e)}};t(393).config=s,e.exports=s}},o={};function t(n){var s=o[n];if(void 0!==s)return s.exports;var a=o[n]={exports:{}};return e[n](a,a.exports,t),a.exports}const n=t(723);window.main=async function(){if(window.loaded)return void n.warn("Main called twice!");n.log("===================="),n.log("Starting Smart Funge"),n.log("===================="),n.log();const e=t(393);window.app=e,t(962),e.config.default(),e.config.override(),e.config.load(),e.config.save(),n.log("Config loaded sucessfully"),n.log("Loading assets...");const o=t(463);o.load(),(()=>{const e=document.getElementById("loading-text"),t=document.getElementById("loading-strip");function n(){if(o.complete)clearInterval(-1);else{const n=o.progress/o.total*100;t.style.width=`${n}%`,e.innerText=`${Math.floor(n)}%`}}loadInterval=setInterval(n,100),n()})(),await o.promise,n.log("Assets loaded sucessfully"),n.log("Initializing GUI..."),t(945).init(),n.log("GUI initialized sucessfully"),e.loaded=!0,n.log(),n.log("=============================="),n.log("Smart Funge loaded sucessfully"),n.log("=============================="),n.log(),window.main=()=>n.warn("Main called twice!")}})();